{"version":3,"sources":["App.tsx","components/goods.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","sortBy","isShowm","isClickedAlph","isClickedLength","isClickedReverse","reverse","setState","sortByAlphabet","sortByLength","reset","this","visibleGoods","sort","a","b","length","localeCompare","className","type","classNames","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SDNFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAoCE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EAEZC,UAAU,EACVC,OAAQ,KACRC,SAAS,EACTC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,GATtB,EAYEC,QAAU,WACR,EAAKC,UAAS,SAAAT,GAAK,MAAK,CACtBC,YAAaD,EAAMC,WACnBG,SAAS,EACTG,kBAAkB,OAhBxB,EAqBEG,eAAiB,WACf,EAAKD,SAAS,CACZN,OAAQ,WACRC,SAAS,EACTC,eAAe,EACfC,iBAAiB,KA1BvB,EA8BEK,aAAe,WACb,EAAKF,SAAS,CACZN,OAAQ,SACRC,SAAS,EACTE,iBAAiB,EACjBD,eAAe,KAnCrB,EAuCEO,MAAQ,WACN,EAAKH,SAAS,CACZN,OAAQ,KACRF,YAAY,EACZG,SAAS,EACTC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,KA9CxB,4CAmDE,WACE,MAGIM,KAAKb,MAFPC,EADF,EACEA,WAAYE,EADd,EACcA,OAAQC,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,cAC7BC,EAFF,EAEEA,gBAAiBC,EAFnB,EAEmBA,iBAEbO,EAAY,UAAOhB,GAkBzB,OAhBAgB,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,IAAK,SACH,OAAOa,EAAEE,OAASD,EAAEC,OAEtB,IAAK,WACH,OAAOF,EAAEG,cAAcF,GAEzB,QAAS,OAAO,MAIhBhB,GACFa,EAAaN,UAIb,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYjB,IAChBkB,QAASV,KAAKH,eAJhB,iCAUA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYhB,IAChBiB,QAASV,KAAKF,aAJhB,4BASA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYf,IAEhBgB,QAASV,KAAKL,QANhB,qBAWEJ,GAEA,wBACEiB,KAAK,SACLD,UAAU,sCACVG,QAASV,KAAKD,MAHhB,sBAUJ,cAAC,EAAD,CAAUjB,MAAOmB,WAvHzB,GAAyBU,IAAMC,WEpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d1719d9a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodList } from './components/goods';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: boolean,\n  sortBy: string,\n  isShowm: boolean,\n  isClickedAlph: boolean,\n  isClickedLength: boolean,\n  isClickedReverse: boolean,\n  // toggleClass: boolean,\n};\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    // eslint-disable-next-line react/no-unused-state\n    sortType: true,\n    sortBy: 'id',\n    isShowm: false,\n    isClickedAlph: true,\n    isClickedLength: true,\n    isClickedReverse: true,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      isShowm: true,\n      isClickedReverse: false,\n\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortBy: 'alphabet',\n      isShowm: true,\n      isClickedAlph: false,\n      isClickedLength: true,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: 'length',\n      isShowm: true,\n      isClickedLength: false,\n      isClickedAlph: true,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: 'id',\n      isReversed: false,\n      isShowm: false,\n      isClickedAlph: true,\n      isClickedLength: true,\n      isClickedReverse: true,\n\n    });\n  };\n\n  render() {\n    const {\n      isReversed, sortBy, isShowm, isClickedAlph,\n      isClickedLength, isClickedReverse,\n    } = this.state;\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'length':\n          return a.length - b.length;\n\n        case 'alphabet':\n          return a.localeCompare(b);\n\n        default: return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': isClickedAlph })}\n            onClick={this.sortByAlphabet}\n\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': isClickedLength })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              {\n                'is-light': isClickedReverse,\n              })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          { isShowm\n          && (\n            <button\n              type=\"button\"\n              className=\"button btn-reset is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={visibleGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          data-cy=\"Good\"\n          key={good}\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}